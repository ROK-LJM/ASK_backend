<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--멤버 sql문-->
<mapper namespace="com.ask.ask_project.mapper.BoardMapper">

    <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ < 로그인, 회원가입 > ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!-- 로그인 체크 -->
    <select id="loginCheck" parameterType="userDTO" resultType="int">
        SELECT COUNT(*) FROM ask.user_info WHERE userId = #{userId} AND userPw = #{userPw};
    </select>

    <!-- 회원가입 - 마스터 -->
    <insert id="insert_memberInfo" parameterType="memberDTO">
        INSERT INTO ask.member_info(id, pw, name, email) values (#{id}, #{pw}, #{name}, #{email});
    </insert>

    <!--회원가입 - 마스터를 user_info에 넣어줌 -->
    <insert id="insert_userInfo" parameterType="memberDTO">
        INSERT INTO ask.user_info(compCode, userId, userPw, userName, userGrant) values (#{id}, #{id}, #{pw}, #{name}, 1);
    </insert>

    <!-- 회원가입 - 아이디 중복 체크 -->
    <select id="checkId" parameterType="String" resultType="int">
        SELECT count(*) FROM ask.member_info WHERE id = #{id};
    </select>

    <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ < 사용자 관리 > ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!--사용자관리 (create)-->
    <insert id="createUser" parameterType="userDTO">
        INSERT INTO ask.user_info(userId, userPw, userName, compCode, userGrant) VALUES (#{userId}, #{userPw}, #{userName}, #{compCode}, 0);
    </insert>

    <!--사용자관리 (read)-->
    <select id="readUser" parameterType="userDTO" resultType="userDTO">
        SELECT * FROM ask.user_info where compCode = #{compCode} AND userId NOT IN(#{compCode});
    </select>

    <!--사용자관리 (update) -->
    <update id="updateUser" parameterType="userDTO">
        UPDATE ask.user_info SET userId = #{userId}, userPw = #{userPw}, userName = #{userName}, userGrant = #{userGrant}
        WHERE compCode=#{compCode} AND userId = #{preUserId};
    </update>

    <!--사용자관리 (delete)-->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM ask.user_info WHERE userId = #{userId};
    </delete>

    <!--마스터키-->
    <select id="getMaster" parameterType="userDTO" resultType="String">
        SELECT compCode FROM ask.user_info WHERE userId = #{userId};
    </select>

    <!--사용자관리 (updateModal)-->
    <select id="updateUserModal" parameterType="userDTO" resultType="userDTO">
        SELECT * FROM ask.user_info where compCode = #{compCode} AND userId = #{userId};
    </select>

    <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ < 회사 설정 > ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!-- 회사 설정 - 자회사 정보 등록 -->
    <insert id="createCompany" parameterType="companyDTO">
        INSERT INTO ask.company_info(compNum, compName, compCEO, compAddress, compType, compItems, compEmail, id)
        values (#{compNum}, #{compName}, #{compCEO}, #{compAddress}, #{compType}, #{compItems}, #{compEmail}, #{id});
    </insert>

    <!-- 회사 설정 - 자회사 정보 불러오기 -->
    <select id="readCompany" parameterType="companyDTO" resultType="companyDTO">
        SELECT * FROM ask.company_info WHERE id = #{id};
    </select>

    <!-- 회사 설정 - 자회사 정보 수정 -->
    <update id="updateCompany" parameterType="companyDTO">
        UPDATE ask.company_info SET compNum = #{compNum}, compName = #{compName}
                                  , compCEO = #{compCEO}, compAddress = #{compAddress}
                                  , compType = #{compType}, compItems = #{compItems}
                                  , compEmail = #{compEmail}
                                WHERE id = #{id};
    </update>

    <!-- 회사 설정 - 자회사 정보 삭제 -->
    <delete id="deleteCompany" parameterType="companyDTO">
        DELETE FROM ask.company_info WHERE id = #{id};
    </delete>

    <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ < 부서관리 > ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!-- 부서관리 - 부서정보 등록(create) -->
    <insert id="createDep" parameterType="depDTO">
        INSERT INTO ask.dep_info(compCode, depCode, depName, depDetail) VALUES(#{compCode}, #{depCode}, #{depName}, #{depDetail});
    </insert>

    <!-- 부서관리 - 부서정보 불러오기(read) -->
    <select id="readDep" parameterType="depDTO" resultType="depDTO">
        SELECT * FROM ask.dep_info WHERE compCode = #{compCode};
    </select>

    <!-- 부서관리 - 부서정보 삭제(delete) -->
    <delete id="deleteDep" parameterType="depDTO">
        DELETE FROM ask.dep_info WHERE compCode = #{compCode} AND depCode = #{depCode};
    </delete>

    <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ < 사원관리 > ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!-- 사원관리 - 사원정보 등록(create) -->
    <insert id="createEmp" parameterType="empDTO">
        INSERT INTO ask.emp_info(compCode, empNum, empName, empSSN, empPhone, empEmail,
                                 depCode,
                                 depName,
                                 empRank, empStart, empEnd, totalVacation, remindVacation, empEndReason,
                                 bankName, bankNum, bankOwner, empFamilyNum, empPay, empAddress, empPhoto, empResume)
        VALUES(#{compCode}, #{empNum}, #{empName}, #{empSSN}, #{empPhone}, #{empEmail},
               #{depCode},
               #{depName},
               #{empRank}, #{empStart}, #{empEnd}, #{totalVacation}, #{remindVacation}, #{empEndReason},
               #{bankName}, #{bankNum}, #{bankOwner}, #{empFamilyNum}, #{empPay}, #{empAddress}, #{empPhoto}, #{empResume}
              )
    </insert>
    
    <!-- 사원관리 - 사원정보 불어오기(read) -->
    <select id="readEmp" parameterType="empDTO" resultType="empDTO">
        SELECT * FROM ask.emp_info WHERE compCode = ${compCode};
    </select>
    
    <!-- 사원관리 - 사원정보 수정(update) -->
    <update id="updateEmp" parameterType="empDTO">
        UPDATE ask.emp_info SET empNum=#{empNum}, empName=#{empName}, empSSN=#{empName}, empPhone=#{empPhone}, empEmail=#{empEmail},
                                depCode=#{depCode},
                                depName=#{depName},
                                empRank=#{empRank}, empStart=#{empStart}, empEnd=#{empEnd}, totalVacation=#{totalVacation},
                                remindVacation=#{remindVacation}, empEndReason=#{empEndReason},
                                bankName=#{bankName}, bankNum=#{bankNum}, bankOwner=#{bankOwner}, empFamilyNum=#{empFamilyNum},
                                empPay=#{empPay}, empAddress=#{empAddress}, empPhoto=#{empPhoto}, empResume=#{empResume}
    </update>

    <!-- 사원관리 - 사원정보 삭제(delete) -->
    <delete id="deleteEmp" parameterType="empDTO">
        DELETE FROM ask.emp_info WHERE compCode = #{compCode} AND empNum = #{empNum};
    </delete>

</mapper>